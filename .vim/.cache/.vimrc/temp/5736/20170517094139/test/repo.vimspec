Describe '#repo'
    Describe #find_start()
        It returns the column to start completion
            Assert Equals(FindStart('repo', ' aaa foo/bar'), 5)
            Assert Equals(FindStart('repo', ' aa f-o/bar baz', 'gg$Tr'), 4)
            Assert Equals(FindStart('repo', ' a _oo/bar)'), 3)
        End

        It returns -1 when the column to start completion is not found
            Assert Equals(FindStart('repo', ' a oo'), -1)
            Assert Equals(FindStart('repo', ' a/'), -1)
            Assert Equals(FindStart('repo', ' /a'), -1)
            Assert Equals(FindStart('repo', ' a.b/c.d'), -1)
        End
    End

    Describe #candidates()
        It searches the specific user's repositories
            let cs = github_complete#repo#candidates('rhysd/cle')
            Assert IsList(cs)
            Assert NotEmpty(cs)
            Assert True(cs[0].word =~# '^rhysd/cle')
        End

        It caches previous candidates
            call github_complete#api#reset_cache()
            Assert Empty(github_complete#api#get_cache())

            let cs = github_complete#repo#candidates('rhysd/cle')

            Assert True(github_complete#api#is_cached('search/repositories', 'q=cle+in:name+user:rhysd'))
            Assert Equals(cs, github_complete#repo#candidates('rhysd/cle'))
        End
    End
End

" vim:ft=vim
